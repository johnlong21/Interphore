#!/usr/local/bin/jsish -u %s
"use asserts";

assert(true,'true');
assert(2*3 == 6,'math');
try {
    assert(false,'false');
} catch(e) {
    puts('caught error');
}
;Interp.conf({asserts:false});
var x = 1;
;x;
;assert(false,'false2');
;assert(false===true);
;Interp.conf({asserts:true});

var i=1, j=2;
;assert(function () { return (i<j); },'fail');

try {
    assert(false==true);
} catch(e) {
    puts('caught error2: '+e);
}
try {
;   assert(false,'false');
} catch(e) {
    puts('caught error2: '+e);
}

;assert(false,'this assert failed',{mode:'puts', noStderr:true});

;Interp.conf({assertMode:'puts', noStderr:true});

;assert(true===false);
;assert(false,'assert also failed');


/*
=!EXPECTSTART!=
caught error
Interp.conf({asserts:false}) ==>  undefined
x ==>  1
assert(false,'false2') ==>  undefined
assert(false===true) ==>  undefined
Interp.conf({asserts:true}) ==>  undefined
assert(function () { return (i<j); },'fail') ==>  undefined
caught error2: assert(false==true)
caught error2: false
this assert failed
assert(false,'this assert failed',{mode:'puts', noStderr:true}) ==>  undefined
Interp.conf({assertMode:'puts', noStderr:true}) ==>  undefined
assert(true===false) ==> ", assert(true===false))
assert(true===false) ==>  undefined
assert also failed
assert(false,'assert also failed') ==>  undefined
=!EXPECTEND!=
*/
