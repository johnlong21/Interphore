data.mapEntries = [];

var map = {
	nodes: [],
};

map.clear = function() {
	//TODO(fallow): Do this
};

map.createNode = function(entryName, dest, connectedDirection, connectedNodeName) {
	var entry = data.mapEntries[entryName];

	if (!entry) {
		entry = {
			name: entryName,
			unlocked: false,
			seenUnlocked: false,
			completed: false,
		};

		data.mapEntries[entryName] = entry;
	}

	var node = {
		sprite: null,
		textField: null,
		dest: dest,

		entry: entry,
		connectedNodeName: connectedNodeName,
		connectedDirection: connectedDirection,
	};

	map.nodes[entryName] = node;

	return entry;
};

map.show = function() {
	Object.keys(map.nodes).forEach(function(nodeKey) {
		var node = map.nodes[nodeKey];
		print("Doing "+node.name);
		node.textField = addEmptyImage(256, 256);
		node.textField.setFont("NunitoSans-Light_22");
		node.textField.setText(node.entry.name);
		node.textField.tint = 0xFFa5e3f2;
		node.textField.layer = GRAPH_NODE_TEXT_LAYER;

		var textPadding = 50;
		node.sprite = add9SliceImage(
			"img/writer/nodeChoice",
			node.textField.textWidth + textPadding,
			node.textField.textHeight + textPadding,
			22, 22, 44, 44
		);
		node.sprite.layer = GRAPH_NODE_LAYER;

		node.textField.x = node.sprite.width/2 - node.textField.textWidth/2;
		node.textField.y = node.sprite.height/2 - node.textField.textHeight/2;
		node.sprite.addChild(node.textField);

		if (!node.connectedNodeName) {
			node.sprite.x = gameWidth/2 - node.sprite.width/2;
			node.sprite.y = gameHeight/2 - node.sprite.height/2;
		} else {
			var parentNode = map.nodes[node.connectedNodeName];
			node.sprite.x = parentNode.sprite.x;
			node.sprite.y = parentNode.sprite.y;

			var nodePadding = 20;
			if (node.connectedDirection == LEFT) {
				node.sprite.x -= node.sprite.width/2 + parentNode.sprite.width/2 + nodePadding;
			} else if (node.connectedDirection == RIGHT) {
				node.sprite.x += node.sprite.width/2 + parentNode.sprite.width/2 + nodePadding;
			} else if (node.connectedDirection == TOP) {
				node.sprite.y -= node.sprite.height/2 + parentNode.sprite.height/2 + nodePadding;
			} else if (node.connectedDirection == BOTTOM) {
				node.sprite.y += node.sprite.height/2 + parentNode.sprite.height/2 + nodePadding;
			}
		}
	});

	hookTempUpdate(map.update);
};

map.update = function() {
	Object.keys(map.nodes).forEach(function(nodeKey) {
		var node = map.nodes[nodeKey];

		var spr = node.sprite;
		if (node.entry.unlocked) {
			node.sprite.tint = 0;

			if (spr.justReleased) {
				gotoPassage(node.dest);
			}
		} else {
			node.sprite.tint = 0xCC0d0d0d;
		}
	});
};
