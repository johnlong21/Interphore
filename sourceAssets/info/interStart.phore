setFontTag("i", "NunitoSans-Italic_26");
setFontTag("b", "NunitoSans-Bold_26");

var currentMusic;

var nextChoices = add9SliceImage("img/writer/writerChoice.png", 128, BUTTON_HEIGHT, 5, 5, 10, 10);
nextChoices.temp = false;
nextChoices.x = gameWidth - nextChoices.width;
nextChoices.y = gameHeight - nextChoices.height;
nextChoices.onRelease = function() {
	if (nextChoices.alpha != 1) return;
	var totalPages = choices.length / choicesPerPage;
	if (choicePage >= totalPages-1) return;
	playEffect("audio/ui/nextArrow");
	choicePage++;
}

var nextArrow = addImage("choiceArrow.png");
nextArrow.temp = false;
nextChoices.addChild(nextArrow);
nextArrow.tint = 0xFFa5e3f2;
nextArrow.x = nextChoices.width/2 - nextArrow.width/2;
nextArrow.y = nextChoices.height/2 - nextArrow.height/2;

var prevChoices = add9SliceImage("img/writer/writerChoice.png", 128, BUTTON_HEIGHT, 5, 5, 10, 10);
prevChoices.y = gameHeight - prevChoices.height;
prevChoices.temp = false;
prevChoices.onRelease = function() {
	if (prevChoices.alpha != 1) return;
	if (choicePage <= 0) return;
	playEffect("audio/ui/backArrow");
	choicePage--;
}

var prevArrow = addImage("choiceArrow.png");
prevArrow.temp = false;
prevChoices.addChild(prevArrow);
prevArrow.scaleX = -1;
prevArrow.tint = 0xFFa5e3f2;
prevArrow.x = prevChoices.width/2 - prevArrow.width/2 + prevArrow.width;
prevArrow.y = prevChoices.height/2 - prevArrow.height/2;

var exitButton = addImage("writer/exit.png");
exitButton.temp = false;
exitButton.scaleX = exitButton.scaleY = 2;
exitButton.x = gameWidth - exitButton.width*exitButton.scaleX - 16;
exitButton.y = 16;
exitButton.onRelease = function() {
	if (exitButton.alpha != 1) return;
	gotoMap(false);
}

var titleBg = addRectImage(gameWidth, 50, 0x2d354c);
titleBg.onRelease = function() {
	if (titleBg.alpha != 0) commandSkipped = true;
}
titleBg.temp = false;
titleBg.y = gameHeight/2 - titleBg.height/2;
titleBg.layer = TITLE_LAYER;

var titleTf = addEmptyImage(titleBg.width, titleBg.height);
titleTf.temp = false;
titleTf.setFont("NunitoSans-Bold_22");
titleTf.layer = TITLE_LAYER;
titleTf.tint = 0xFFdff9ff;
titleBg.addChild(titleTf);

var inputFieldBg = addRectImage(gameWidth, 100, 0x222222);
inputFieldBg.temp = false;
inputFieldBg.alpha = 0;
inputFieldBg.tint = 0x2d354c;

var inputField = addEmptyImage(gameWidth, 100);
inputFieldBg.addChild(inputField);
inputField.temp = false;
inputField.tint = 0xFFa5e3f2;
inputField.setFont("NunitoSans-Light_22");

var inputCarrot = addRectImage(4, 32, 0x2acbed);
inputFieldBg.addChild(inputCarrot);
inputCarrot.temp = false;

var inputTitle = addEmptyImage(gameWidth, 150);
inputTitle.temp = false;
inputFieldBg.addChild(inputTitle);
inputTitle.tint = 0xFFa5e3f2;
inputTitle.setFont("NunitoSans-Light_22");
inputTitle.alpha = 0.75;

var tooltipTf = addEmptyImage(256, 256);
tooltipTf.temp = false;
tooltipTf.tint = 0xFFFFFFFF;
tooltipTf.layer = TOOLTIP_TEXT_LAYER;

var tooltipBg = null;

var desiredWidth = 1280;
var desiredHeight = 720;

function exitMod() {
	gotoPassage("modsStart");
}

/// VN

var vn = {
	chars: [],
	charPad: 128,

	text: null,
	textBg: null,
	fontColours: [],
};

vn.init = function() {
	queueCall(function() { vn.initNow(); });
}
vn.initNow = function() {
	vn.text = addEmptyImage(512, 256);
	vn.text.layer = VN_TEXT_LAYER;
}
vn.deinit = function() {
	queueCall(function() { vn.deinitNow(); });
}
vn.deinitNow = function() {
	if (vn.text) vn.text.destroy();
	vn.text = null;

	if (vn.textBg) vn.textBg.destroy();
	vn.textBg = null;

	vn.chars.forEach(function(curChar) {
		curChar.destroy();
	});

	vn.chars = [];
	vn.fontColour = [];
}

vn.setLeft = function(img, fontColour) {
	queueCall(function() { vn.setNow(0, img, fontColour); });
}
vn.setRight = function(img, fontColour) {
	queueCall(function() { vn.setNow(1, img, fontColour); });
}
vn.setNow = function(charNum, img, fontColour) {
	if (fontColour === undefined) fontColour = 0xFFFFFFFF;

	if (vn.chars[charNum]) {
		vn.chars[charNum].destroy();
		vn.chars[charNum] = null;
	}

	var newChar = addImage(img);
	newChar.x =
		(charNum == 0) ? -newChar.width :
		(charNum == 1) ? gameWidth + newChar.width :
		0;

	newChar.y = gameHeight - newChar.height;

	vn.fontColours[charNum] = fontColour;
	vn.chars[charNum] = newChar;
}

vn.delay = function(amount) {
	queueDelay(amount);
}

vn.leftIn = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.inNow(0, time); });
	queueDelay(time);
}
vn.rightIn = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.inNow(1, time); });
	queueDelay(time);
}
vn.inNow = function(charNum, time) {
	var endX = 
		(charNum == 0) ? vn.charPad :
		(charNum == 1) ? gameWidth - vn.chars[charNum].width - vn.charPad :
		0;

	tween(vn.chars[charNum], time, {x: endX});
}

vn.leftOut = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.outNow(0, time); });
	queueDelay(time);
}
vn.rightOut = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.outNow(1, time); });
	queueDelay(time);
}
vn.outNow = function(charNum, time) {
	var curChar = vn.chars[charNum];
	var endX = 
		(charNum == 0) ? -curChar.width :
		(charNum == 1) ? gameWidth + curChar.width :
		0;

	tween(curChar, time, {x: endX});
}

vn.leftFadeIn = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.fadeInNow(0, time); });
	queueDelay(time);
}
vn.rightFadeIn = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.fadeInNow(1, time); });
	queueDelay(time);
}
vn.fadeInNow = function(charNum, time) {
	var curChar = vn.chars[charNum];

	var endX = 
		(charNum == 0) ? vn.charPad :
		(charNum == 1) ? gameWidth - curChar.width - vn.charPad :
		0;

	curChar.x = endX;
	curChar.alpha = 0;
	tween(curChar, time, {alpha: 1});
}

vn.leftFadeOut = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.fadeOutNow(0, time); });
	queueDelay(time);
}
vn.rightFadeOut = function(time) {
	if (time == undefined) time = 0.5;
	queueCall(function() { vn.fadeOutNow(1, time); });
	queueDelay(time);
}
vn.fadeOutNow = function(charNum, time) {
	var curChar = vn.chars[charNum];

	curChar.alpha = 1;
	tween(curChar, time, {alpha: 0});
}

vn.leftSay = function(text) {
	queueCall(function() { vn.sayNow(0, text); });
	queuePause();
}
vn.rightSay = function(text) {
	queueCall(function() { vn.sayNow(1, text); });
	queuePause();
}
vn.sayNow = function(charNum, text) {
	var curChar = vn.chars[charNum];
	vn.text.tint = vn.fontColours[charNum];
	vn.text.setText(text);

	var textX = 
		(charNum == 0) ? gameWidth*0.25 - vn.text.textWidth/2 :
		(charNum == 1) ? gameWidth*0.75 - vn.text.textWidth/2 :
		0;

	vn.text.x = textX;
	vn.text.y = gameHeight*0.75 - vn.text.textHeight/2;

	if (vn.textBg) vn.textBg.destroy();
	vn.textBg = addRectImage(vn.text.textWidth * 1.25, vn.text.textHeight * 1.25);
	vn.textBg.alpha = 0.85;
	vn.textBg.layer = VN_TEXT_BG_LAYER;
	vn.textBg.x = vn.text.x + vn.text.textWidth/2 - vn.textBg.width/2;
	vn.textBg.y = vn.text.y + vn.text.textHeight/2 - vn.textBg.height/2;
}

vn.choice = function(text, result) {
	queueCall(function() { vn.choiceNow(text, result); });
};
vn.choiceNow = function(text, result) {
	if (result === undefined) result = skipCurrentCommand;
	addChoice(text, function() {
		clearChoices();
		result();
	});
}

vn.leftEffect = function(type) {
	queueCall(function() { vn.doEffectNow(0, type); }); 
}
vn.rightEffect = function(type) {
	queueCall(function() { vn.doEffectNow(1, type); });
}
vn.doEffectNow = function(charNum, type) {
	var curChar = vn.chars[charNum];

	if (type == "shake") {
		tween(curChar, 0.1, {x: curChar.x + 4}, {type: PINGPONG});
	}
}

vn.leftCancelEffects = function() {
	queueCall(function() { vn.cancelEffectsNow(0); });
}
vn.rightCancelEffects = function() {
	queueCall(function() { vn.cancelEffectsNow(1); });
}
vn.cancelEffectsNow = function(charNum) {
	var curChar = vn.chars[charNum];

	cancelTweens(curChar);
}

vn.stop = function() {
	queueStop();
};

/// /VN

addSoundTweak("audio/ui/exit", 0.1);
addSoundTweak("audio/ui/restart", 0.3);
addSoundTweak("audio/ui/newChoiceClick/1", 0.2);
addSoundTweak("audio/ui/newChoiceClick/2", 0.2);
addSoundTweak("audio/ui/newChoiceClick/3", 0.2);
addSoundTweak("audio/ui/newChoiceClick/4", 0.2);
addSoundTweak("audio/ui/newChoiceClick/5", 0.2);
addSoundTweak("audio/ui/newChoiceClick/6", 0.2);
addSoundTweak("audio/ui/newChoiceClick/7", 0.2);
addSoundTweak("audio/ui/newChoiceClick/8", 0.2);
addSoundTweak("audio/ui/newChoiceClick/9", 0.2);
addSoundTweak("audio/ui/bestChoiceClick/1", 0.2);
addSoundTweak("audio/ui/bestChoiceClick/2", 0.2);
addSoundTweak("audio/ui/bestChoiceClick/3", 0.2);
addSoundTweak("audio/ui/hoverChoiceButtons/1", 0.07);
addSoundTweak("audio/ui/hoverChoiceButtons/2", 0.07);
addSoundTweak("audio/ui/hoverChoiceButtons/3", 0.07);
addSoundTweak("audio/ui/tooltip/1", 0.2);
addSoundTweak("audio/ui/tooltip/2", 0.2);
addSoundTweak("audio/ui/tooltip/3", 0.2);
addSoundTweak("audio/ui/hoverChoiceIcons/1", 0.6);
addSoundTweak("audio/ui/hoverChoiceIcons/2", 0.6);
addSoundTweak("audio/ui/hoverChoiceIcons/3", 0.6);

addSoundTweak("audio/effect/cartSlide/right/1", 0.5);
addSoundTweak("audio/effect/cartSlide/right/2", 0.5);
addSoundTweak("audio/effect/cartSlide/left/1", 0.5);
addSoundTweak("audio/effect/cartSlide/left/2", 0.5);

addSoundTweak("audio/music/newVictim", 0.2);
addSoundTweak("audio/music/newSelf", 0.4);
addSoundTweak("audio/music/violetMeteorite", 0.1);
addSoundTweak("audio/ambience/library", 0.2);
addSoundTweak("audio/ambience/cell", 0.1);

streamEmbeddedTexture("NunitoSans-Light_22");
streamEmbeddedTexture("NunitoSans-Bold_22");

registerIcon("Abuse", "img/writer/icons/Abuse.png");
registerIcon("Art", "img/writer/icons/Art.png");
registerIcon("Baby", "img/writer/icons/Baby.png");
registerIcon("Blood", "img/writer/icons/Blood.png");
registerIcon("Cub", "img/writer/icons/Cub.png");
registerIcon("Drugs", "img/writer/icons/Drugs.png");
registerIcon("Female", "img/writer/icons/Female.png");
registerIcon("Feral", "img/writer/icons/Feral.png");
registerIcon("Foodplay", "img/writer/icons/Foodplay.png");
registerIcon("Gore", "img/writer/icons/Gore.png");
registerIcon("Hyper", "img/writer/icons/Hyper.png");
registerIcon("Intersex", "img/writer/icons/Intersex.png");
registerIcon("Love", "img/writer/icons/Love.png");
registerIcon("Male", "img/writer/icons/Male.png");
registerIcon("Music", "img/writer/icons/Music.png");
registerIcon("Piss", "img/writer/icons/Piss.png");
registerIcon("Plot", "img/writer/icons/Plot.png");
registerIcon("Pregnancy", "img/writer/icons/Pregnancy.png");
registerIcon("Prolapse", "img/writer/icons/Prolapse.png");
registerIcon("Raunch", "img/writer/icons/Raunch.png");
registerIcon("Scat", "img/writer/icons/Scat.png");
registerIcon("Snuff", "img/writer/icons/Snuff.png");
registerIcon("Toddler", "img/writer/icons/Toddler.png");
registerIcon("Trash", "img/writer/icons/Trash.png");
registerIcon("Vomit", "img/writer/icons/Vomit.png");
registerIcon("Candy Gore", "img/writer/icons/Candy-Gore.png");
registerIcon("Soft Vore", "img/writer/icons/Soft-Vore.png");
registerIcon("Guest Writer", "img/writer/icons/Guest-Writer.png");
registerIcon("Patreon Commission", "img/writer/icons/Patreon-Commission.png");
