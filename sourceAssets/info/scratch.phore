START_PASSAGES
:scratchModStart
!`
if (music) music.destroy();
var music = playMusic("audio/ambience/violetMeteorite");
music.name = "music";

setBackground(0, "img/writer/mainBg");
setBackground(1, "");
choicesPerPage = 6;
`
WIP Dev Menu

Make sure you play through the intro or go to Hub and visit Red Pond to set your player variables

[Mods|modsStart]
[Cart Intro|cartIntro]
[Wendy's Apartment|wendyApt]
[LLL]
[Change Mynt|Change Mynt's genitals]
[Hub|thirstyCaves]
[Red Pond|introModOriginal]
[Background Test|backgroundTest]
[Input Text Test|inputTest]
[Icon Test|iconTest]
[Disable Exit Test|disableExitTest]
[Title test|titleTest]
[Audio Test|audioTest]
[Image test|imageTest]
[Variable test|variableTest]
[Save test|saveTest]
[Tween test|tweenTest]
[Msg test|msgText]
[Text scrolling test|textScrollingTest]
[Tag test|tagTest]
[Benchmark|benchmark]
[Tooltip Test|tooltipTest]
[Word wrap Test|wordWrapTest]
[Rpg test|rpgTest]

!`
if (internal) addChoice("VN test", "vnTest");
`
---
:Change Mynt's genitals

She currently has `myntCock()`

!`addChoice("Cock", function() {
	data.myntCock = true;
	gotoPassage("Change Mynt's genitals");
});

addChoice("Cunt", function() {
	data.myntCock = false;
	gotoPassage("Change Mynt's genitals");
});

addChoice("Back", "scratchModStart");
`

---
:thirstyCaves

!`
execAsset("thirstyCaves.phore");
initThirstyCaves();
gotoMap();
`

---
:introModOriginal

!`
clear();
execAsset("introMod.phore");
gotoPassage("introModStart");
`
---
:cartIntro
!`
clear();
execAsset("introCart.phore");
gotoPassage("introModCartStart");
`

---
:wendyApt
!`
clear();
execAsset("wendyApt.phore");
gotoPassage("wendyAptStart");
`

---
:LLL
!`
clear();
execAsset("LLL.phore");
gotoPassage("hubLLL");
`
---
:backgroundTest
!`
setBackground(0, "myntBg", TILED);
backgrounds[0].bobY = 0.5;
setBackground(1, "myntBg2");
`
There's some backgrounds.
[Go back|scratchModStart]
---
:inputTest
Gimme some text.
!`addInputField("Right here:");`
[Continue|inputTest2]
---
:inputTest2
That text was (`lastInput`)
[Go back|scratchModStart]
---
:audioTest
This is a looping audio test
!`
addChoice("Place once", function() {
	var channel = playEffect("newChoiceClick/1.ogg");
	channel.name = "clickSound";
});

addChoice("Place looping", function() {
	var channel = playMusic("newChoiceClick/1.ogg");
	channel.name = "clickSound";
});

addChoice("Stop audio", function() {
	var channel = getAudio("clickSound");
	channel.destroy();
});
`
[Go back|scratchModStart]
---
:iconTest   
!`// If going here fails it's because of the spaces after the title`
This is a test of the icons

!`
addChoice("Go back", "scratchModStart", {icons: ["Male", "Female"]});
`
---
:disableExitTest
This is an example of disabling the exit button
!`
addChoice("Disable", function() {
	disableExit();
});
addChoice("Enable", function() {
	enableExit();
});
`
[Go back|scratchModStart]
---
:titleTest
Let's test some titles!
!`
addChoice("Go for it", function() {
	queueTitle("Hello");
	queueTitle("Can you hear me?");
});

addChoice("Back", function() {
	setTitle("");
	gotoPassage("scratchModStart");
});
`
---
:imageTest
!`
streamAsset("coin.png", "https://i.imgur.com/mmt2kcc.png");
streamAsset("test1.png", "https://upload.wikimedia.org/wikipedia/commons/d/dc/Large_Drive-In_EMC_Test_Chamber.png");

msg("Images loading...");
whenDoneStreaming(function() {
	gotoPassage("realImageTest");
});
`
---
:realImageTest
!`
var img = addRectImage(265, 128, 0xFF0000);
img.x = 800;
img.y = 800;

var coin = addImage("coin.png");
coin.x = 500;
coin.y = 100;

var test1 = addImage("test1.png");
test1.x = 0;
test1.y = 0;
test1.scaleX = test1.scaleY = 0.20;
`
[Go back|scratchModStart]
---
:variableTest
!`if (data.apples === undefined) data.apples = 1;`
This passage shows off basic variables.
[Let's get to it|variableMain]
---
:variableMain
You have `data.apples` apples.
[Gain an apple]
[Lose an apple]
[Leave|scratchModStart]
---
:Gain an apple
!`data.apples += 1;`
You gained an apple.
[Go back|variableMain]
---
:Lose an apple
!`data.apples -= 1;`
You lost an apple.
[Go back|variableMain]
---
:saveTest
!`saveCheckpoint();`
Your data has been saved, you can exit now without losing your data
[Nice!|scratchModStart]
---
:tweenTest
!`
var spr = addRectImage(65, 65, 0x0000FF);
spr.x = 600;
spr.y = 300;
tween(spr, 5, {scaleX: -3, skewY: 0.5, rotation: 20}, {type: PINGPONG});
hookUpdate(function() {
	spr.alpha = spr.hovering ? 0.5 : 1;
});
`
[Go back|scratchModStart]
---
:msgText
!`
addChoice("Show some msgs", function() {
	msg("This is a test msg");
	msg("Here's another");
	msg("And another");
});
`
[Go back|scratchModStart]
---
:textScrollingTest
[Go back|scratchModStart]
!`
for (var i = 0; i < 40; i++) append("A line\n ");
`
---
:tagTest
This <b>text</b> has <i>tags!</i>
[Go back|scratchModStart]
---
:benchmark
This is going to be a sprite benchmark.

!`
choicesPerPage = 8;
var numSprites = 10;
var posEnabled = true;
var rotEnabled = true;
var scaleEnabled = true;
var alphaEnabled = true;

addChoice("-10", function() {
	numSprites -= 10;
	if (numSprites < 0) numSprites = 0;
});
addChoice("+10", function() {
	numSprites += 10;
});
addChoice("Pos", function() {
	posEnabled = !posEnabled;
});
addChoice("Rot", function() {
	rotEnabled = !rotEnabled;
});
addChoice("Scale", function() {
	scaleEnabled = !scaleEnabled;
});
addChoice("Alpha", function() {
	alphaEnabled = !alphaEnabled;
});
addChoice("Go back", "scratchModStart");

var timerTime = 3;
var benchTimer = timer(timerTime, function() {
	var sprIndexArr = [];
	for (var i = 0; i < numSprites; i++) sprIndexArr.push(i);
	sprIndexArr.forEach(function(i) {
		var spr = addRectImage(64, 64, rndInt(0, 0xFFFFFF));
		spr.x = rndFloat(0, gameWidth);
		spr.y = rndFloat(0, gameHeight);

		var targetObject = {};
		if (posEnabled) {
			targetObject.x = spr.x + rndFloat(-300, 300);
			targetObject.y = spr.y + rndFloat(-300, 300);
		}
		if (rotEnabled) targetObject.rotation = rndFloat(-180, 180);
		if (scaleEnabled) {
			targetObject.scaleX = rndFloat(0.5, 1.5);
			targetObject.scaleY = rndFloat(0.5, 1.5);
		}
		if (alphaEnabled) targetObject.alpha = rndFloat(0.25, 1);

		tween(spr, timerTime, targetObject, { onComplete: function() {
			spr.destroy();
		}});
	});
}, -1);

clearFunctions.push(function() {
	benchTimer.destroy();
});
`
---
:tooltipTest
This sprite displays a tooltip when you hover it.
!`
var spr = addRectImage(128, 128, 0xFF0000);
spr.x = 300;
spr.y = 300;
spr.whileHovering = function() {
	showTooltip("This is a longer test tooltip, how are you today?");
}
`

[Go back|scratchModStart]
---
:wordWrapTest
This is a word wrap test.

!`
var wwField = addEmptyImage(gameWidth, gameHeight);
var wwRect = addRectImage(1, 1, 0x0000FF);
wwRect.alpha = 0.3;

var wwWidth = 0;

function drawText() {
	if (wwWidth <= 100) wwWidth = 1024;
	wwField.tint = 0xFFFFFFFF;
	wwField.setWordWrapWidth(wwWidth);
	wwField.setText("");
	wwField.setText("This is some test text. This is some test text. This is some test text. Loooooooooooooooooooooooooong word.");
	wwField.x = 100;
	wwField.y = 100;

	wwRect.x = wwField.x;
	wwRect.y = wwField.y;
	wwRect.scaleX = wwWidth;
	wwRect.scaleY = wwField.textHeight;
}

addChoice("-10", function() {
	wwWidth -= 10;
	drawText();
});

addChoice("+10", function() {
	wwWidth += 10;
	drawText();
});
addChoice("Go back", "scratchModStart");
`
---
:rpgTest
!`
disableExit();
choicesPerPage = 8;

addChoice("No AI", function() {
	data.testRpgSetting = "noAi";
	execAsset("testRpg.phore");
});

addChoice("Simple AI", function() {
	data.testRpgSetting = "simpleAi";
	execAsset("testRpg.phore");
});

addChoice("Hard AI", function() {
	data.testRpgSetting = "hardAi";
	execAsset("testRpg.phore");
});

if (internal) {
	addChoice("Shields", function() {
		data.testRpgSetting = "rpgShields";
		execAsset("testRpg.phore");
	});

	addChoice("Porcupines", function() {
		data.testRpgSetting = "rpgPorcupines";
		execAsset("testRpg.phore");
	});

	addChoice("Spawners", function() {
		data.testRpgSetting = "rpgSpawners";
		execAsset("testRpg.phore");
	});

	addChoice("Exploders", function() {
		data.testRpgSetting = "rpgExploders";
		execAsset("testRpg.phore");
	});

	addChoice("Immortals", function() {
		data.testRpgSetting = "rpgImmortals";
		execAsset("testRpg.phore");
	});
}

// addChoice("Go back", "scratchModStart");

// addChoice("Magi demo", function() {
// 	execAsset("magiDemo.phore");
// });
`

---
:vnTest
!`
vn.init();
vn.setLeft("someImagePath", 0xFF005500);
vn.leftIn();
vn.leftSay("Hello?");
vn.leftSay("Is anyone there?");

vn.setRight("someImagePath", 0xFF550000);
vn.rightIn();

vn.rightSay("I'm here.");
vn.leftSay("Oh! Hello, little deer.");
vn.rightSay("I'm an impala.");
vn.leftSay("Right. Do you know where Rebeca is?");
vn.leftSay("I've been looking for here since the :-) face killed everyone.");
vn.rightSay("Haven't seen here.");
vn.leftSay("Ah...");
vn.leftSay("Do you know where we are?");
vn.rightSay("I do not.");
vn.leftSay("We're in a bomb shelter.");

vn.rightFadeOut();
vn.setRight("someImagePath", 0xFF550000);
vn.rightFadeIn();

vn.rightEffect("shake");
vn.rightSay("Is the situation that dire?");
vn.leftSay("Well, we don't know, but it couldn't hurt to stay here until things settle down.");

vn.delay(0.5);
vn.leftFadeOut();
vn.rightFadeOut();
vn.choice("Go back", function() {
	gotoPassage("scratchModStart");
});
vn.deinit();

---
:Exit
`exitMod();`
END_PASSAGES
