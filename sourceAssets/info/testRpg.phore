execAsset("rpg.phore");

initRpgBattle();

function moveSpriteInFrontOf(source, dest) {
	source.x = gameWidth/2 - source.width/2;
	source.y = gameHeight/2 - source.height/2;

	source.x = lerp(0.85, source.x, dest.x);
	source.y = lerp(1, source.y, dest.y);
}

/// Spells
var fireball = createSpell();
fireball.name = "Fireball";
fireball.info = "Throws a fireball";
fireball.baseDamage = 20;
fireball.affinities = ["Fire"];
fireball.execute = function(source, target) {
	var targetSpr = target.sprite;

	var spr = addRectImage(64, 64, 0xCC0000);
	spr.x = targetSpr.x + targetSpr.width/2 - spr.width/2;
	spr.y = targetSpr.y + targetSpr.height/2 - spr.height/2;
	tween(spr, 1, {scaleX: 3, scaleY: 3, alpha: 0}, {onComplete: function() {
		spr.destroy();
		spellDone();
	}});
};

var lightning = createSpell();
lightning.name = "Lightning";
lightning.info = "Hit an enemy with many lightning bolts";
lightning.affinities = ["Electric"];
lightning.execute = function(source, target) {
	var targetSpr = target.sprite;

	var strikes = 10;
	var strikesArr = [];
	for (var i = 0; i < strikes; i++) strikesArr.push(i);
	strikesArr.forEach(function(i) {

		timer(i * 0.2, function() {
			var spr = addRectImage(32, gameHeight, 0xFFFF00);
			spr.x = targetSpr.x + targetSpr.width/2 - spr.width/2 + rndFloat(-50, 50);
			spr.y = 0;
			lightning.doPartialDamage(target, 1/(strikes));
			tween(spr, 0.5, {alpha: 0}, {onComplete: function() {
				spr.destroy();
				if (i == strikesArr.length-1) spellDone();
			}});
		});
	});
};

var gutPunch = createSpell();
gutPunch.name = "Gut Punch";
gutPunch.info = "A strong generic attack";
gutPunch.baseDamage = 15;
gutPunch.isAttack = true;
gutPunch.execute = function(source, target) {
	var sourceSpr = source.sprite;
	var targetSpr = target.sprite;

	var endX = lerp(0.65, sourceSpr.x, targetSpr.x);
	var endY = lerp(0.90, sourceSpr.y, targetSpr.y);

	tween(sourceSpr, 1, {x: endX, y: endY}, {onComplete: function() {
		tween(sourceSpr, 0.5, {x: targetSpr.x}, {ease: QUART_OUT, startDelay: 0.5, onComplete: function() {
			spellDone();
		}});
	}});
};

var marked = createSpell();
marked.name = "Marked";
marked.info = "Mark an enemy to take more damage";
marked.baseDamage = 0;
marked.affinities = ["Raunch"];
marked.execute = function(source, target) {
	var sourceSpr = source.sprite;
	var targetSpr = target.sprite;

	sourceSpr.x = lerp(0.85, sourceSpr.x, targetSpr.x);
	sourceSpr.y = lerp(1, sourceSpr.y, targetSpr.y);

	timer(0.5, function() {
		applyBuff("Marked", target);
		spellDone();
	});
};

var heal = createSpell();
heal.name = "Heal";
heal.info = "Heal an ally";
heal.baseDamage = 0;
heal.targetsEnemies = false;
heal.targetsAllies = true;
heal.execute = function(source, target) {
	var sourceSpr = source.sprite;
	var targetSpr = target.sprite;

	sourceSpr.x = gameWidth/2 - sourceSpr.width/2;
	sourceSpr.y = gameHeight/2 - sourceSpr.height/2;

	sourceSpr.x = lerp(0.85, sourceSpr.x, targetSpr.x);
	sourceSpr.y = lerp(0.85, sourceSpr.y, targetSpr.y);

	timer(0.5, function() {
		doDamage(target, -30);
		spellDone();
	});
};

var poison = createSpell();
poison.name = "Poison";
poison.info = "Hits an enemy twice, then poisons them";
poison.baseDamage = 6;
poison.execute = function(source, target) {
	var targetSpr = target.sprite;

	var strikes = 2;
	var strikesArr = [];
	for (var i = 0; i < strikes; i++) strikesArr.push(i);
	strikesArr.forEach(function(i) {

		timer(i * 0.5, function() {
			var spr = addRectImage(32, 32, 0xAAAA00);
			spr.x = targetSpr.x + targetSpr.width/2 - spr.width/2 + rndFloat(-50, 50);
			spr.y = targetSpr.y + targetSpr.height/2 - spr.height/2 + rndFloat(-50, 50);
			poison.doPartialDamage(target, 1/strikes);
			tween(spr, 1, {y: spr.y - rndFloat(20, 60), alpha: 0}, {onComplete: function() {
				spr.destroy();
				if (i == strikesArr.length-1) {
					spellDone();
					applyBuff("Poisoned", target);
				}
			}});
		});
	});
};

var barrier = createSpell();
barrier.name = "Barrier";
barrier.info = "Buffs and ally for the next hit";
barrier.baseDamage = 0;
barrier.targetsAllies = true;
barrier.targetsEnemies = false;
barrier.execute = function(source, target) {
	var sourceSpr = source.sprite;
	var targetSpr = target.sprite;

	sourceSpr.x = lerp(0.85, sourceSpr.x, targetSpr.x);
	sourceSpr.y = lerp(1, sourceSpr.y, targetSpr.y);

	timer(0.5, function() {
		applyBuff("Sheilded", target);
		spellDone();
	});
};

var slam = createSpell();
slam.name = "Slam";
slam.info = "Gives enemies a chance to lose their next turn.";
slam.baseDamage = 0;
slam.execute = function(source, target) {
	var sourceSpr = source.sprite;
	var targetSpr = target.sprite;

	moveSpriteInFrontOf(sourceSpr, targetSpr);

	timer(0.5, function() {
		applyBuff("Slammed", target);
		spellDone();
	});
};

/// AIs
var skipperAi = createAi();
skipperAi.name = "Skipper";
skipperAi.execute = function() {
	skip();
};

var simpleAi = createAi();
simpleAi.name = "Simple";
simpleAi.execute = function() {
	castSpell("Gut Punch", rpg.players[0]);
};

/// Buffs
var markedBuff = createBuff();
markedBuff.name = "Marked";
markedBuff.iconName = "Snuff.png";
markedBuff.info = "Will take double damage from the next attack";
markedBuff.executeDamaged = function(unit, damage) {
	removeBuff("Marked", unit);
	return damage*2;
}

var shielded = createBuff();
shielded.name = "Sheilded";
shielded.iconName = "Love.png";
shielded.info = "Will take half damage from the next attack";
shielded.executeDamaged = function(unit, damage) {
	removeBuff("Sheilded", unit);
	return damage*0.5;
}

var poisoned = createBuff();
poisoned.name = "Poisoned";
poisoned.iconName = "Blood.png";
poisoned.info = "Will take damage at the start of their turn";
poisoned.lastingTurns = 2;
poisoned.executeStartOfTrun = function(unit) {
	doDamage(unit, 3);
}

var slammed = createBuff();
slammed.name = "Slammed";
slammed.iconName = "Gore.png";
slammed.info = "Could lose their next turn";
slammed.lastingTurns = 999;
slammed.executeStartOfTrun = function(unit) {
	removeBuff("Slammed", unit);

	if (rnd() > 0.5) {
		return true;
	}
}

/// Units
var p1 = createUnit();
p1.speed = 30;
p1.name = "Player 1";
p1.spellNames = [
	"Gut Punch",
	"Fireball",
	"Marked",
	"Barrier",
	"Slam"
];
p1.affinities = ["Fire"];

var p2 = createUnit();
p2.speed = 30;
p2.name = "Player 2";
p2.spellNames = [
	"Gut Punch",
	"Lightning",
	"Poison",
	"Heal",
	"Slam"
];
p2.affinities = ["Electric"];

var enemy1 = createUnit();
enemy1.name = "enemy 1";
enemy1.ai = "Simple";
enemy1.speed = 20;

var enemy2 = createUnit();
enemy2.name = "enemy 2";
enemy2.ai = "Simple";
enemy2.speed = 100;

startRpgBattle([p1, p2], [enemy1, enemy2]);
