function he(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "he";
	if (gender === "female") return "she";
	if (gender === "both") return "they";
	return "nil gender";
}

function hes(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "he's";
	if (gender === "female") return "she's";
	if (gender === "both") return "they're";
	return "nil gender";
}

function himself(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "himself";
	if (gender === "female") return "herself";
	if (gender === "both") return "themselves";
	return "nil gender";
}

function his(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "his";
	if (gender === "female") return "her";
	if (gender === "both") return "their";
	return "nil gender";
}

function him(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "him";
	if (gender === "female") return "her";
	if (gender === "both") return "them";
	return "nil gender";
}

function He(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "He";
	if (gender === "female") return "She";
	if (gender === "both") return "They";
	return "nil gender";
}

function Hes(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "He's";
	if (gender === "female") return "She's";
	if (gender === "both") return "They're";
	return "nil gender";
}

function Himself(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "Himself";
	if (gender === "female") return "Herself";
	if (gender === "both") return "Themselves";
	return "nil gender";
}

function His(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "His";
	if (gender === "female") return "Her";
	if (gender === "both") return "Their";
	return "nil gender";
}

function Him(gender) {
	if (gender === undefined) gender = data.gender;
	if (gender === "male") return "Him";
	if (gender === "female") return "Her";
	if (gender === "both") return "They";
	return "nil gender";
}

function fox() {
	return data.species;
}

function species(fox, wolf, bunny, cat) {
	if (data.species === "fox") return fox;
	if (data.species === "wolf") return wolf;
	if (data.species === "bunny") return bunny;
	if (data.species === "cat") return cat;

	if (data.species === undefined) return cat;
}

function hasKnot(knot, noKnot) {
	if (data.species === undefined) return noKnot;
	if (data.hasKnot) return knot;
	return noKnot;
}

function cockType(knot, barbs, human) {
	if (data.species === undefined) return human;
	if (data.hasKnot) return knot;
	if (data.hasBarbs) return barbs;
	return human;
}

function boobs(hasTiddy, noTiddy) {
    if (data.hasBoobs && hasTiddy !== undefined) return hasTiddy;
    if (data.hasBoobs && hasTiddy === undefined) return "tits";

    if (!data.hasBoobs && noTiddy !== undefined) return noTiddy;
    if (!data.hasBoobs && noTiddy === undefined) return "chest";
}

function myntCock(pickedCock, pickedCunt) {
    if (data.myntCock && pickedCock !== undefined) return pickedCock;
    if (data.myntCock && pickedCock === undefined) return "cock";

    if (!data.myntCock && pickedCunt !== undefined) return pickedCunt;
    if (!data.myntCock && pickedCunt === undefined) return "cunt";
}

function cock(genitals) {
	if (genitals === undefined) return "cock";
	if (data.genitals === "male") return "cock";
	if (data.genitals === "female") return "cunt";
	if (data.genitals === "both") return "junk";
	return "nil genitals";
}

function hasBoth(both, noBoth) {
	if (data.genitals === "both") return both;
	return noBoth;
}

function genitals(male, female, both) {
	if (male === undefined) {
		if (data.genitals === "male") return "cock";
		if (data.genitals === "female") return "cunt";
		if (data.genitals === "both") return "cock";
	}
	if (data.genitals === "male") return male;
	if (data.genitals === "female") return female;
	if (data.genitals === "both") return both;
	return "Genitals not set";
}

function gender(male, female, both) {
	if (data.gender === "male") return male;
	if (data.gender === "female") return female;
	if (data.gender === "both") return both;
	return "Gender not set";
}

function pouphGen(male, female, none) {
	if (data.pouphGenitals === "male") return male;
	if (data.pouphGenitals === "female") return female;
	if (data.pouphGenitals === "none") return none;
	return "POUPH HAS NO GENDER SET, FUCK, UH OHHHHH, GO SET IT, ";
}

function gainExp(amount) {
	data.totalExp += amount;

	var xpBackY = desiredHeight - 200;
	var xpBarY = xpBackY + 4;

	var xpBack = addImage("writer/xpBack");
	xpBack.x = desiredWidth / 2 - xpBack.width / 2;
	xpBack.y = desiredHeight - xpBack.height;
	tween(xpBack, 0.5, {y: xpBackY}, {ease: QUINT_OUT});

	var xpBar1 = addImage("writer/xpBar1");
	xpBar1.x = xpBack.x + 10;
	xpBar1.y = desiredHeight - xpBack.height;
	tween(xpBar1, 0.5, {y: xpBarY}, {ease: QUINT_OUT});

	var xpBar2 = addImage("writer/xpBar2");
	xpBar2.x = xpBar1.x + xpBar1.width + 1;
	xpBar2.scaleX = 49 + (xpBack.width - 75) * data.exp * 0.01;
	xpBar2.y = desiredHeight - xpBack.height;
	tween(xpBar2, 0.5, {y: xpBarY}, {ease: QUINT_OUT});

	var xpBar3 = addImage("writer/xpBar3");
	xpBar3.x = xpBar2.x + xpBar2.width * xpBar2.scaleX;
	xpBar3.y = desiredHeight - xpBack.height;
	tween(xpBar3, 0.5, {y: xpBarY}, {ease: QUINT_OUT});

	var xpFront = addImage("writer/xpFront");
	xpFront.x = xpBack.x;
	xpFront.y = desiredHeight - xpFront.height;

	tween(xpFront, 0.5, {y: xpBackY}, {ease: QUINT_OUT, onComplete: function() {
		data.exp += amount;

		if (data.exp > 100) {
			while (data.exp > 100) {
				data.level += 1;
				data.exp -= 100;
			}

			msg("Level: <b>"+data.level+"</b>\nXP: <b>"+data.totalExp+"</b>");
			playEffect("audio/ui/rewards/levels");

			if (data.level >= 2) {
				worldMap.unlockEntry("Yellow Pond");
				worldMap.unlockEntry("Olitippo's Stream");
			} else if (data.level >= 3) {
				worldMap.unlockEntry("Indigo Pond");
				worldMap.unlockEntry("L.L.L.");
			} else if (data.level >= 4) {
				worldMap.unlockEntry("Down: Foodland");
				worldMap.unlockEntry("Black Mansion");
			} else if (data.level >= 5) {
				worldMap.unlockEntry("Up: ???");
				worldMap.unlockEntry("Chrysophylux");
			}
		} else {
			msg("  + <b>"+amount+"</b> XP  ", true);
			if (amount <= 10) playEffect("audio/ui/rewards/xp/0");
			if (amount > 10 && amount <= 20) playEffect("audio/ui/rewards/xp/1");
			if (amount > 20 && amount <= 40) playEffect("audio/ui/rewards/xp/2");
			if (amount > 40) playEffect("audio/ui/rewards/xp/3");
		}

		tween(xpBar2, 1 + 0.7 * amount * 0.01, {scaleX: 49 + (xpBack.width - 75) * data.exp * 0.01}, {ease: ELASTIC_OUT});
		tween(xpBar3, 1 + 0.7 * amount * 0.01, {x: xpBar2.x + xpBar2.width * 49 + (xpBack.width - 75) * data.exp * 0.01}, {ease: ELASTIC_OUT});
		
		xpBar1.y = xpBarY + 10;
		xpBar2.y = xpBarY + 10;
		xpBar3.y = xpBarY + 10;
		tween(xpBar1, 0.1, {y: xpBarY}, {ease: QUAD_IN_OUT});
		tween(xpBar2, 0.1, {y: xpBarY}, {ease: QUAD_IN_OUT});
		tween(xpBar3, 0.1, {y: xpBarY}, {ease: QUAD_IN_OUT});
	}});

	tween(xpFront, 2.5, {alpha: 1}, {onComplete: function() {
		tween(xpBack, 3, {alpha: 0});
		tween(xpBar1, 3, {alpha: 0});
		tween(xpBar2, 3, {alpha: 0});
		tween(xpBar3, 3, {alpha: 0});
		tween(xpFront, 3, {alpha: 0});
	}});
}