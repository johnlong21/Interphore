print("arriving at thirstyCaves");

if (music) music.destroy();
var music = playMusic("audio/ambience/violetMeteorite");
music.name = "music";

START_PASSAGES
---
:introArea

You find a red pond, no matter where you are.

If you jump in, you can change your body again.

!`
choicesPerPage = 2;
addChoice("Jump in.", function() {
	gotoPassage("Jump in.");
});
`
[Move along.]
---
:Jump in.
!`
data.genitals = "";
data.hasBoobs = false;
data.gender = "";
data.playerName = "";
data.hasKnot = false;
data.hasBarbs = false;
data.species = "";
disableExit();
`

You swan dive back into the red fluid and your body disintegrates. It feels kinda harsh and stingy at first because you hit it at a weird angle, but then it mellows out to a cool, tingly numbness. Feels like a menthol hot tub.

Man, indefinity is so relaxing.

!`
choicesPerPage = 1;
`

[Shapeshift.]
---
:Shapeshift.

You reach down and fiddle with yourself.

!`
if (!data.hasBoobs) addChoice("Boobs.", function() {
	data.hasBoobs = true;
	gotoPassage("Shapeshift.");
});

if (data.genitals !== "female" && data.genitals !== "both") addChoice("Cunt.", function() {
	if (data.genitals === "male") {
		data.genitals = "both";
	} else {
		data.genitals = "female";
	}
	gotoPassage("Shapeshift.");
});

if (data.genitals !== "male" && data.genitals !== "both") addChoice("Cock.", function() {
	if (data.genitals === "female") {
		data.genitals = "both";
	} else {
		data.genitals = "male";
	}
	gotoPassage("Shapeshift.");
});

if (data.genitals !== "male" && data.genitals !== "female" && data.genitals !== "both" && !data.hasBoobs) addChoice("Everything.", function() {
	data.hasBoobs = true;
	data.genitals = "both";
	gotoPassage("Shapeshift.2");
});

if (data.genitals === "female" || data.genitals === "male" || data.genitals === "both") addChoice("Ready.", "Shapeshift.2");`
---
:Shapeshift.2

You reach inside yourself and try to find your true identity.

!`
choicesPerPage = 3;

addChoice("He.", function() {
	data.gender = "male";
	gotoPassage("Shapeshift.3");
});

addChoice("She.", function() {
	data.gender = "female";
	gotoPassage("Shapeshift.3");
});

addChoice("They.", function() {
	data.gender = "both";
	gotoPassage("Shapeshift.3");
});
`
---
:Shapeshift.3

You try to think of a good label to slap on this tight lil package.

!`
addInputField();

addChoice("Submit.", function() {
	gotoPassage("Shapeshift.4");
});

addChoice("Dankpaw.", function() {
	data.playerName = "Dankpaw";
	gotoPassage("Shapeshift.4");
});

addChoice("Rebeca.", function() {
	data.playerName = "Rebeca";
	gotoPassage("Shapeshift.4");
});

addChoice("Phae.", function() {
	data.playerName = "Phae";
	gotoPassage("Shapeshift.4");
});
`
---
:Shapeshift.4

You contemplate your new fursona. "Original character," you think to yourself, "please do not steal."

!`
addChoice("Fox.", function() {
	data.species = "fox";
	if (data.genitals === "male" || data.genitals === "both") {
		gotoPassage("ShapeshiftClarify");
	} else {
		gotoPassage("Shapeshift.5");
	}
});

addChoice("Wolf.", function() {
	data.species = "wolf";
	if (data.genitals === "male" || data.genitals === "both") {
		gotoPassage("ShapeshiftClarify");
	} else {
		gotoPassage("Shapeshift.5");
	}
});

addChoice("Bunny.", function() {
	data.species = "bunny";
	gotoPassage("Shapeshift.5");
});

addChoice("Cat.", function() {
	data.species = "cat";
	if (data.genitals === "male" || data.genitals === "both") {
		gotoPassage("ShapeshiftClarify");
	} else {
		gotoPassage("Shapeshift.5");
	}
});
`
---
:ShapeshiftClarify

!`
choicesPerPage = 2;

if (data.species === "cat") {
	append("Sexy.\n\nYou ponder whether or not you want barbs on your dick, though.");

	addChoice("Yes. >:3", function() {
		data.hasBarbs = true;
		gotoPassage("Shapeshift.5");
	});

	addChoice("No.", function() {
		data.hasBarbs = false;
		gotoPassage("Shapeshift.5");
	});
} else {
	if (data.species === "fox") append("Slut.");
	if (data.species === "wolf") append("Edgy.");

	append("\n\nYou ponder whether or not you want a big fat knot at the base of your dick.");
	
	addChoice("Oh yes I do.", function() {
		data.hasKnot = true;
		gotoPassage("Shapeshift.5");
	});

	addChoice("No.", function() {
		data.hasKnot = false;
		gotoPassage("Shapeshift.5");
	});
}
`

---
:Shapeshift.5

!`
choicesPerPage = 1;

if (data.species === "bunny") append("Cute.\n\n");
if (data.genitals === "female") {
	if (data.species === "fox") append("Slut.\n\n");
	if (data.species === "wolf") append("Edgy.\n\n");
	if (data.species === "cat") append("Sexy.\n\n");
}
append("Okay. All done. You haul your new body out of the red pond, all sloppy and drippy at the extremeties.");

enableExit();
saveCheckpoint();
`

[Move along.]
---
:Move along.
!`gotoThirstyCaves();`

---
:devMenu

!`
clearNodes();
getAudio("music").destroy();
execAsset("scratch.phore");
gotoPassage("scratchModStart");
`
---
:LLL
!`
gotoChats();
`
---
:LLL
!`
gotoLLL();
`
---
:earth
!`
gotoEarth();
`
---
:archiepelago
!`
gotoArchiepelago();
`

END_PASSAGES

function gotoThirstyCaves() {
	disableExit();
	clear();
	clearNodes();
  	setBackground(0, "writer/mainBg");

	//Map
	submitNode("L.L.L.", "LLL");
	submitNode("Spilled Paint", "earth");
	submitNode("Red Pond", "introArea");
	submitNode("Chats", "chats");
	submitNode("Archiepelago", "archiepelago");
	submitNode("L.L.L.", "LLL");

	attachNode("L.L.L.", "Spilled Paint", BOTTOM);
	attachNode("Spilled Paint", "Red Pond", RIGHT);
	attachNode("Spilled Paint", "Chats", LEFT);
	attachNode("Spilled Paint", "Archiepelago", BOTTOM);

	setNodeLocked("Archiepelago", function() {
		return data.metCart;
	});

		setNodeLocked("Chats", function() {
		return data.haveChatted;
	});

	//Cutscene
	playEffect("audio/effect/mapTransition");

	var redGoop = addImage("writer/mapTransition.png");
	redGoop.temp = false;
	redGoop.y = -redGoop.height;

	var redGoop2 = addRectImage(gameWidth, gameHeight, 0xd93c3c);
	redGoop2.temp = false;
	redGoop2.y = redGoop.y - redGoop2.height;

	var redGoop3 = addImage("writer/mapTransition.png");
	redGoop3.temp = false;
	redGoop3.y = redGoop2.y;
	redGoop3.scaleY = -1;

	tween(redGoop, 2.5, {y: gameHeight + redGoop.height + redGoop2.height}, {ease: QUAD_IN_OUT});
	tween(redGoop2, 2.5, {y: gameHeight + redGoop2.height}, {ease: QUAD_IN_OUT});
	tween(redGoop3, 2.5, {y: gameHeight + redGoop2.height}, {ease: QUAD_IN_OUT});

	timer(2.5, function() {
		if (redGoop) redGoop.destroy();
		if (redGoop2) redGoop2.destroy();
		if (redGoop3) redGoop3.destroy();
		gotoMap();
		enableExit();

		var layerSelect = addImage("writer/layerSelect.png");
		layerSelect.alpha = 0;
		layerSelect.y = -layerSelect.height;
		tween(layerSelect, 1, {y: 0, alpha: 1}, {ease: QUINT_OUT});
	});
}