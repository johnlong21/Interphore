clearNodes();

START_PASSAGES
:mainMenuStart
welcome
[Story]
[Load Mod]
[Extra]
---
:Title Screen
!`var bg = addImage("img/writer/intro/titleBG.png");
bg.x = -70;
bg.scaleX = 1.2;
bg.scaleY = 1.2;

tween(bg, 10, {scaleX: 1, scaleY: 1}, {type: PINGPONG, ease: QUAD_IN});
tween(bg, 10, {x: 0}, {type: PINGPONG, ease: QUAD_IN_OUT});
tween(bg, 12, {y: -70}, {type: PINGPONG, ease: QUAD_IN_OUT});

var buttonWidth = 400;
var buttonHeight = 50;
var buttonPad = 20;
var buttonTextLeftPad = 40;

//Gray rects
var titleRect = addRectImage(gameWidth, 156, 0x302f32);
titleRect.alpha = 0;
titleRect.y = -titleRect.height;

tween(titleRect, 2, {y: 54, alpha: 1}, {ease: QUINT_OUT});

var taglineRect = addRectImage(gameWidth, buttonHeight, 0x302f32);
taglineRect.y = 230;

var taglines = ["sex, violence, and reading", "step into the pond", "sensual text misadventure", "post-apocalyptic amnesiac grandma furries", "finding wendy", "seven layer sex dip", "greater mama", "i can't believe it's not butt hair", "moby dink's revenge 2: the dinkening", "big boi spikes again: a volleyball text game", "ginormo kitten tiddies", "you basically just click buttons", "violent and disgusting (soon)", "porno butt holes", "inherently pornographic organisms", "yiff yiff yiff yiff yiff yiff yiff", "erotic furry text game", "partially customizable groin", "click the play button to begin clicking other buttons", "furry ero text game", "spilled paint", "fucking furries", "reality is a fingerpainting", "this is the only canon tagline", "you can assimilate me if you want, daddy"];
var ran = rndInt(0, taglines.length);

var taglineText = addEmptyImage(gameWidth, buttonHeight);
taglineText.setText(taglines[ran]);
taglineText.tint = 0xFFeb3b3b;
taglineText.alpha = 0;
taglineText.x = gameWidth - taglineText.textWidth - 140;
taglineText.y = taglineRect.height/2 - taglineText.textHeight/2;
taglineRect.addChild(taglineText);

tween(taglineText, 3, {x: gameWidth - taglineText.textWidth - 40, alpha: 1}, {ease: QUINT_OUT});

var playRect = addRectImage(buttonWidth, buttonHeight, 0x302f32);
playRect.x = gameWidth - playRect.width;// gameWidth;
playRect.y = taglineRect.y + taglineRect.height + 50;
playRect.onRelease = function() {
	getAudio("music").destroy();
	playEffect("audio/ui/newChoiceClick");
	gotoPassage("introModMyntStart");
	clearNodes();
}

var playText = addEmptyImage(buttonWidth, buttonHeight);
playText.setText("Play");
playText.x = buttonTextLeftPad;
playText.tint = 0xFF00a6fc;
playText.y = playRect.height/2 - playText.textHeight/2;
playRect.addChild(playText);

var loadRect = addRectImage(buttonWidth, buttonHeight, 0x302f32);
loadRect.x = gameWidth - loadRect.width; //gameWidth;
loadRect.y = playRect.y + playRect.height + buttonPad;
loadRect.onRelease = function() {
	getAudio("music").destroy();
	playEffect("audio/ui/newChoiceClick");
	clearNodes();
	gotoMap();
	loadGame();
}

var loadText = addEmptyImage(buttonWidth, buttonHeight);
loadText.setText("Load");
loadText.tint = 0xFF00a6fc;
loadText.x = buttonTextLeftPad;
loadText.y = loadRect.height/2 - loadText.textHeight/2;
loadRect.addChild(loadText);

var modRect = addRectImage(buttonWidth, buttonHeight, 0x302f32);
modRect.x = gameWidth - modRect.width;// gameWidth;
modRect.y = loadRect.y + loadRect.height + buttonPad;
modRect.onRelease = function() {
	playEffect("audio/ui/newChoiceClick");
	getAudio("music").destroy();
	loadMod();
}

var modText = addEmptyImage(buttonWidth, buttonHeight);
modText.setText("Load Mod");
modText.tint = 0xFF00a6fc;
modText.x = buttonTextLeftPad;
modText.y = modRect.height/2 - modText.textHeight/2;
modRect.addChild(modText);

var extraRect = addRectImage(buttonWidth, buttonHeight, 0x302f32);
extraRect.x = gameWidth - extraRect.width;// gameWidth;
extraRect.y = modRect.y + modRect.height + buttonPad;
extraRect.onRelease = function() {
	playEffect("audio/ui/newChoiceClick");
	clearNodes();
	getAudio("music").destroy();
	execAsset("scratch.phore");
}

var extraText = addEmptyImage(buttonWidth, buttonHeight);
extraText.setText("Extras");
extraText.tint = 0xFF00a6fc;
extraText.x = buttonTextLeftPad;
extraText.y = extraRect.height/2 - extraText.textHeight/2;
extraRect.addChild(extraText);

tween(playRect, 2, {x: gameWidth - playRect.width}, {ease: QUART_OUT});
tween(loadRect, 2.2, {x: gameWidth - loadRect.width}, {ease: QUART_OUT});
tween(modRect, 2.4, {x: gameWidth - modRect.width}, {ease: QUART_OUT});
tween(extraRect, 2.6, {x: gameWidth - extraRect.width}, {ease: QUART_OUT});

var playRectTween = tween(playRect, 0.1, {scaleX: 1.05});
var playTextTween = tween(playText, 0.3, {x: buttonTextLeftPad + 20}, {ease: QUINT_OUT});

var loadRectTween = tween(loadRect, 0.1, {scaleX: 1.05});
var loadTextTween = tween(loadText, 0.3, {x: buttonTextLeftPad + 20}, {ease: QUINT_OUT});

var modRectTween = tween(modRect, 0.1, {scaleX: 1.05});
var modTextTween = tween(modText, 0.3, {x: buttonTextLeftPad + 20}, {ease: QUINT_OUT});

var extraRectTween = tween(extraRect, 0.1, {scaleX: 1.05});
var extraTextTween = tween(extraText, 0.3, {x: buttonTextLeftPad + 20}, {ease: QUINT_OUT});


playRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	playRect.tint = 0xFF375266;
	playRectTween.reset();
	playTextTween.reset();
}

loadRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	loadRect.tint = 0xFF375266;
	loadRectTween.reset();
	loadTextTween.reset();
}

modRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	modRect.tint = 0xFF375266;
	modRectTween.reset();
	modTextTween.reset();
}

extraRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	extraRect.tint = 0xFF375266;
	extraRectTween.reset();
	extraTextTween.reset();
}

playRect.onUnHover = loadRect.onUnHover = modRect.onUnHover = extraRect.onUnHover = function() {
	playRect.tint = loadRect.tint = modRect.tint = extraRect.tint = 0;
	playEffect("audio/ui/hoverChoiceIcons");
}

var bottomRect = addRectImage(gameWidth, buttonHeight*2, 0x302f32);
bottomRect.alpha = 0;
bottomRect.tint = 0x302f32;
bottomRect.y = gameHeight;

var muteButton = addImage("writer/mute.png");
muteButton.onRelease = function() {
	isMuted = !isMuted;
	if (isMuted) setMasterVolume(0);
	else setMasterVolume(1);
	playEffect("audio/ui/bestChoiceClick");
};

muteButton.scaleY = muteButton.scaleX = 2;
muteButton.x = (muteButton.width * muteButton.scaleX) * -1;
muteButton.y = gameHeight - muteButton.height * muteButton.scaleY * 1.5;

muteButton.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	muteButton.tint = 0xFF375266;
}

muteButton.onUnHover = function() {
	muteButton.tint = 0;
}

tween(muteButton, 3, {x: gameWidth - muteButton.width * muteButton.scaleX - 20}, {ease: QUINT_OUT});

tween(bottomRect, 2, {y: 625, alpha: 1}, {ease: QUINT_OUT});
tween(bottomRect, 6, {scaleY: 1.2}, {type: PINGPONG, ease: QUAD_IN_OUT});

//Text
var text = addImage("img/writer/intro/titleText.png");
text.x = gameWidth;

tween(text, 2, {x: 0}, {ease: QUINT_OUT});

//Cart

var cartBG = addImage("img/writer/characters/cart/cart2.png");
cartBG.tint = 0xFF000000;
cartBG.alpha = 0.30;
cartBG.x = -cartBG.width;
cartBG.y = -20;
cartBG.smoothing = true;
cartBG.scaleX = cartBG.scaleY = 1.6;

var cart = addImage("img/writer/characters/cart/cart2.png");
cart.x = gameWidth;
cart.y = 20;
cart.alpha = 0;
cart.smoothing = true;
cart.scaleX = cart.scaleY = 1.3;

tween(cart, 1.3, {x: 70, alpha: 1}, {ease: QUINT_OUT});
tween(cartBG, 4, {x: 40}, {type: PINGPONG, ease: QUAD_IN_OUT});
`

---
:Story
!`

gotoPassage("introModStart");
clearNodes();`
---
:Extras (Buggy)
!`
clearNodes();
getAudio("music").destroy();
execAsset("scratch.phore");
// gotoBrowser();
`
---
:Back.
!`gotoMap();`

---
:Exit

END_PASSAGES

// gotoPassage("Starting Passage");
submitNode("Story", "Story");

submitNode("Extras (Buggy)", "Extras (Buggy)");
attachNode("Story", "Extras (Buggy)", RIGHT);

gotoPassage("Title Screen");
setBackground(0, "writer/thirstyCavesBg");

var music = playMusic("audio/music/newVictim");
music.name = "music";
music.looping = true;
