clearNodes();

var startMuted = false;
var sfwMenu = false;

// startMuted = true;
// sfwMenu = true;

START_PASSAGES
:mainMenuStart
welcome
[Story]
[Load Mod]
[Extra]
---
:Title Screen
!`
disableExit();
getAudio("music").destroy();

data.species = "bunny";
data.genitals = "both";
data.hasBoobs = false;
data.gender = "both";
data.playerName = "";
data.hasKnot = false;

//Default Settings
data.fastTransition = false;

var container = addEmptyImage(1, 1);
container.scaleX = gameWidth/desiredWidth;
container.scaleY = gameHeight/desiredHeight;

var bgStrings = ["gcd", "spilledPaint", "island"];
var ran = rndInt(0, bgStrings.length - 1);

var bg = addImage("img/writer/"+bgStrings[ran]+"Bg.png");
bg.tint = 0x66000000;
bg.scaleX = 1.2;
bg.scaleY = 1.2;

if (bgStrings[ran] == "gcd") {
	bg.y = -520;
	tween(bg, 26, {scaleX: 1, scaleY: 1}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(bg, 16, {y: 0}, {type: PINGPONG, ease: QUAD_IN_OUT});
} else if (bgStrings[ran] == "spilledPaint") {
	bg.y = -520;
	tween(bg, 24, {scaleX: 1, scaleY: 1}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(bg, 18, {y: 0}, {type: PINGPONG, ease: QUAD_IN_OUT});
} else if (bgStrings[ran] == "island") {
	bg.x = -30;
	tween(bg, 15, {scaleX: 1, scaleY: 1}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(bg, 10, {x: 0}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(bg, 12, {y: -70}, {type: PINGPONG, ease: QUAD_IN_OUT});
}

var buttonWidth = 300;
var buttonHeight = 80;
var buttonPad = 15;
var buttonTextLeftPad = 40;

//Gray rects
var titleRect = add9SliceImage("img/writer/writerChoice.png", 750, 156, 5, 5, 10, 10);
titleRect.alpha = 0;
titleRect.x = 550;
titleRect.y = 23;
container.addChild(titleRect);

titleRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	titleRect.tint = 0x3303a3ff;
}

titleRect.onRelease = function() {
	playEffect("audio/ui/nope");
}

var taglines = ["sex, violence, and reading", "step into the pond", "post-apocalyptic amnesiac grandma furries", "finding wendy", "you basically just click buttons", "porno butt holes", "inherently pornographic organisms", "yiff yiff yiff yiff yiff yiff yiff", "fucking furries", "this is the only canon tagline", "you can assimilate me if you want, daddy"];
var ranTagline = rndInt(0, taglines.length - 1);
var chosenTagline = taglines[ranTagline];

titleRect.whileHovering = function() {
	showTooltip("<b>"+chosenTagline+"</b>");
}

tween(titleRect, 2, {alpha: 1}, {ease: QUINT_OUT});

//Icons

var iconPad = 10;

var patreonIcon = addImage("writer/intro/patreonIcon.png");
patreonIcon.x = desiredWidth;
patreonIcon.y = 250 - patreonIcon.height;
container.addChild(patreonIcon);

var altChanceFallow = "";

if (rndInt(0, 3) > 2) altChanceFallow = "Alt";

var kittIcon = addImage("writer/intro/kittIconAlt.png");
kittIcon.x = desiredWidth;
kittIcon.y = 250 - kittIcon.height;
container.addChild(kittIcon);

var fallowIcon = addImage("writer/intro/fallowIcon"+altChanceFallow+".png");
fallowIcon.x = desiredWidth;
fallowIcon.y = 250 - fallowIcon.height;
container.addChild(fallowIcon);

kittIcon.scaleX = kittIcon.scaleY = fallowIcon.scaleX = fallowIcon.scaleY = patreonIcon.scaleX = patreonIcon.scaleY = 1.1;

tween(patreonIcon, 2, {x: desiredWidth - patreonIcon.width - iconPad - kittIcon.width - iconPad - fallowIcon.width - iconPad}, {ease: QUART_OUT});
tween(kittIcon, 2, {x: desiredWidth - kittIcon.width - iconPad - fallowIcon.width - iconPad}, {startDelay: 0.1, ease: QUART_OUT});
tween(fallowIcon, 2, {x: desiredWidth - fallowIcon.width - iconPad}, {startDelay: 0.2, ease: QUART_OUT});

var patreonIconTween = tween(patreonIcon, 0.1, {scaleY: 1, scaleX: 1});
var patreonIconTween2 = tween(patreonIcon, 0.3, {y: 235 - patreonIcon.height}, {ease: QUINT_OUT});

var kittIconTween = tween(kittIcon, 0.1, {scaleY: 1, scaleX: 1});
var kittIconTween2 = tween(kittIcon, 0.3, {y: 235 - kittIcon.height}, {ease: QUINT_OUT});

var fallowIconTween = tween(fallowIcon, 0.1, {scaleY: 1, scaleX: 1});
var fallowIconTween2 = tween(fallowIcon, 0.3, {y: 235 - fallowIcon.height}, {ease: QUINT_OUT});

patreonIcon.onRelease = function() {
	getUrl("https://www.patreon.com/paraphore");
}

kittIcon.onRelease = function() {
	getUrl("https://inkbunny.net/Kittery");
}

fallowIcon.onRelease = function() {
	getUrl("https://inkbunny.net/FallowWing");
}

patreonIcon.whileHovering = function() {
	patreonIcon.tint = 0x3303a3ff;
	showTooltip("Patreon");
}

kittIcon.whileHovering = function() {
	kittIcon.tint = 0x3303a3ff;
	showTooltip("Writer ~~ Kittery");
}

fallowIcon.whileHovering = function() {
	fallowIcon.tint = 0x3303a3ff;
	showTooltip("Coder ~~ Fallow");
}

patreonIcon.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	patreonIconTween.reset();
	patreonIconTween2.reset();
}

kittIcon.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	kittIconTween.reset();
	kittIconTween2.reset();
}

fallowIcon.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	fallowIconTween.reset();
	fallowIconTween2.reset();
}

kittIcon.onUnHover = fallowIcon.onUnHover = patreonIcon.onUnHover = function() {
	kittIcon.tint = fallowIcon.tint = patreonIcon.tint = 0;
	playEffect("audio/ui/hoverChoiceIcons");
}


//Play, Load, Mods, Extras

var playRect = add9SliceImage("img/writer/writerChoice.png", buttonWidth, buttonHeight, 5, 5, 10, 10);
playRect.x = desiredWidth - playRect.width;
playRect.y = 280;
container.addChild(playRect);
playRect.onRelease = function() {
	getAudio("music").destroy();
	playEffect("audio/ui/newChoiceClick");
	gotoPassage("introModMyntStart");
	clearNodes();
}

var playText = addEmptyImage(buttonWidth, buttonHeight);
playText.setText("Play");
playText.x = buttonTextLeftPad;
playText.tint = 0xFF00a6fc;
playText.y = playRect.height/2 - playText.textHeight/2;
playRect.addChild(playText);

var loadRect = add9SliceImage("img/writer/writerChoice.png", buttonWidth, buttonHeight, 5, 5, 10, 10);
loadRect.x = desiredWidth - loadRect.width; //gameWidth;
loadRect.y = playRect.y + playRect.height + buttonPad;
container.addChild(loadRect);
loadRect.onRelease = function() {
	getAudio("music").destroy();
	playEffect("audio/ui/newChoiceClick");
	clearNodes();
	gotoThirstyCaves();
	loadGame();
}

var loadText = addEmptyImage(buttonWidth, buttonHeight);
loadText.setText("Load");
loadText.tint = 0xFF00a6fc;
loadText.x = buttonTextLeftPad;
loadText.y = loadRect.height/2 - loadText.textHeight/2;
loadRect.addChild(loadText);

var modRect = add9SliceImage("img/writer/writerChoice.png", buttonWidth, buttonHeight, 5, 5, 10, 10);
modRect.x = desiredWidth - modRect.width;// desiredWidth;
modRect.y = loadRect.y + loadRect.height + buttonPad;
container.addChild(modRect);
modRect.onRelease = function() {
	playEffect("audio/ui/newChoiceClick");
	getAudio("music").destroy();
	gotoPassage("modsStart");
}

var modText = addEmptyImage(buttonWidth, buttonHeight);
modText.setText("Mods");
modText.tint = 0xFF00a6fc;
modText.x = buttonTextLeftPad;
modText.y = modRect.height/2 - modText.textHeight/2;
modRect.addChild(modText);

var extraRect = add9SliceImage("img/writer/writerChoice.png", buttonWidth, buttonHeight, 5, 5, 10, 10);
extraRect.x = desiredWidth - extraRect.width;// desiredWidth;
extraRect.y = modRect.y + modRect.height + buttonPad;
container.addChild(extraRect);
extraRect.onRelease = function() {
	playEffect("audio/ui/newChoiceClick");
	clearNodes();
	getAudio("music").destroy();
	gotoPassage("scratchModStart");
}

var extraText = addEmptyImage(buttonWidth, buttonHeight);
extraText.setText("Extras");
extraText.tint = 0xFF00a6fc;
extraText.x = buttonTextLeftPad;
extraText.y = extraRect.height/2 - extraText.textHeight/2;
extraRect.addChild(extraText);

tween(playRect, 2, {x: desiredWidth - playRect.width}, {ease: QUART_OUT});
tween(loadRect, 2.2, {x: desiredWidth - loadRect.width}, {ease: QUART_OUT});
tween(modRect, 2.4, {x: desiredWidth - modRect.width}, {ease: QUART_OUT});
tween(extraRect, 2.6, {x: desiredWidth - extraRect.width}, {ease: QUART_OUT});

var playRectTween = tween(playRect, 0.1, {scaleY: 1.05});
var playTextTween = tween(playText, 0.3, {x: buttonTextLeftPad + 20, y: playText.y + 2}, {ease: QUINT_OUT});

var loadRectTween = tween(loadRect, 0.1, {scaleY: 1.05});
var loadTextTween = tween(loadText, 0.3, {x: buttonTextLeftPad + 20, y: loadText.y + 2}, {ease: QUINT_OUT});

var modRectTween = tween(modRect, 0.1, {scaleY: 1.05});
var modTextTween = tween(modText, 0.3, {x: buttonTextLeftPad + 20, y: modText.y + 2}, {ease: QUINT_OUT});

var extraRectTween = tween(extraRect, 0.1, {scaleY: 1.05});
var extraTextTween = tween(extraText, 0.3, {x: buttonTextLeftPad + 20, y: extraText.y + 2}, {ease: QUINT_OUT});


playRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	playRect.tint = 0x3303a3ff;
	playRectTween.reset();
	playTextTween.reset();
}

loadRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	loadRect.tint = 0x3303a3ff;
	loadRectTween.reset();
	loadTextTween.reset();
}

modRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	modRect.tint = 0x3303a3ff;
	modRectTween.reset();
	modTextTween.reset();
}

extraRect.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	extraRect.tint = 0x3303a3ff;
	extraRectTween.reset();
	extraTextTween.reset();
}

playRect.onUnHover = loadRect.onUnHover = modRect.onUnHover = extraRect.onUnHover = titleRect.onUnHover = function() {
	playRect.tint = loadRect.tint = modRect.tint = extraRect.tint = titleRect.tint = 0;
	playEffect("audio/ui/hoverChoiceIcons");
}

/*
var bottomRect = addRectImage(desiredWidth, buttonHeight*2, 0x252525);
bottomRect.alpha = 0;
bottomRect.tint = 0x252525;
bottomRect.y = desiredHeight;
container.addChild(bottomRect);

tween(bottomRect, 2, {y: 625, alpha: 1}, {ease: QUINT_OUT});
tween(bottomRect, 6, {scaleY: 1.2}, {type: PINGPONG, ease: QUAD_IN_OUT});
*/

var muteButton = addImage("writer/mute.png");
muteButton.scaleY = muteButton.scaleX = 2;
muteButton.alpha = 0;
muteButton.x = 20;
muteButton.y = desiredHeight - muteButton.height*muteButton.scaleY * 1.5;
container.addChild(muteButton);
muteButton.onRelease = function() {
	isMuted = !isMuted;
	if (isMuted) setMasterVolume(0);
	else setMasterVolume(1);
	playEffect("audio/ui/nodeClick");
};

muteButton.onHover = function() {
	playEffect("audio/ui/hoverChoiceButtons");
	muteButton.tint = 0x3303a3ff;
}

muteButton.onUnHover = function() {
	muteButton.tint = 0;
}

tween(muteButton, 3, {alpha: 1}, {ease: QUINT_OUT});

//Text
var text = addImage("img/writer/intro/titleText.png");
text.x = desiredWidth;
container.addChild(text);

tween(text, 2, {x: 0}, {ease: QUINT_OUT});

//Cart

var randomAsset = "img/writer/characters/cart/cart2.png";
if (rndInt(0, 2) == 0) randomAsset = "img/writer/characters/thelly/thelly.png";
if (rndInt(0, 3) == 0) randomAsset = "img/writer/characters/lone/lone.png";
if (rndInt(0, 4) == 0) randomAsset = "img/writer/mynt/face/myntBod/10.png";

if (!sfwMenu) {
	var cartBG = addImage(randomAsset);
	cartBG.tint = 0xFF000000;
	cartBG.alpha = 0.30;
	cartBG.x = 0;
	cartBG.y = -20;
	cartBG.smoothing = true;
	if (randomAsset === "img/writer/characters/cart/cart2.png") cartBG.scaleX = cartBG.scaleY = 1.6;
	if (randomAsset === "img/writer/characters/thelly/thelly.png") cartBG.scaleX = cartBG.scaleY = 1.4;
	if (randomAsset === "img/writer/characters/lone/lone.png") cartBG.scaleX = cartBG.scaleY = 1.1;
	if (randomAsset === "img/writer/mynt/face/myntBod/10.png") cartBG.scaleX = cartBG.scaleY = 1.6;
	container.addChild(cartBG);

	var cart = addImage(randomAsset);
	cart.x = desiredWidth;
	cart.y = 20;
	cart.alpha = 0;
	cart.smoothing = true;
	if (randomAsset === "img/writer/characters/cart/cart2.png") cart.scaleX = cart.scaleY = 1.3;
	if (randomAsset === "img/writer/characters/thelly/thelly.png") cart.scaleX = cart.scaleY = 1.1;
	if (randomAsset === "img/writer/characters/lone/lone.png") cart.scaleX = cart.scaleY = 0.8;
	if (randomAsset === "img/writer/mynt/face/myntBod/10.png") cart.scaleX = cart.scaleY = 1.3;


	container.addChild(cart);

	tween(cart, 1.3, {x: 70, alpha: 1}, {ease: QUINT_OUT});
	tween(cart, 8, {y: 30}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(cartBG, 5, {y: 0}, {type: PINGPONG, ease: QUAD_IN_OUT});
	tween(cartBG, 4, {x: 20}, {type: PINGPONG, ease: QUAD_IN_OUT});
}

if (startMuted) setMasterVolume(0);
`

---
:Story
!`

gotoPassage("introModStart");
clearNodes();`
---
:Extras (Buggy)
!`
clearNodes();
getAudio("music").destroy();
gotoPassage("scratchModStart");
// gotoBrowser();
`
---
:Back.
!`gotoThirstyCaves();`

---
:Exit

END_PASSAGES

// gotoPassage("Starting Passage");
submitNode("Story", "Story");

submitNode("Extras (Buggy)", "Extras (Buggy)");
attachNode("Story", "Extras (Buggy)", RIGHT);

gotoPassage("Title Screen");
setBackground(0, "writer/thirstyCavesBg");


var music = playMusic("audio/music/newEngine");
music.name = "music";
music.looping = true;
